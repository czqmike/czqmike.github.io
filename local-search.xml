<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WSL一键安装zsh、oh-my-zsh与美化主题</title>
    <link href="/2025/09/18/WSL%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85zsh%E3%80%81oh-my-zsh%E4%B8%8E%E7%BE%8E%E5%8C%96%E4%B8%BB%E9%A2%98/"/>
    <url>/2025/09/18/WSL%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85zsh%E3%80%81oh-my-zsh%E4%B8%8E%E7%BE%8E%E5%8C%96%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本来一直就想做这个一键脚本，但是每次都想着反正也没有很麻烦，手动操作下凑合凑合得了。但是经过了 n 次的换机、安装wsl、安zsh之后，终于是忍不住了。<br />这里尽量把所有步骤能一键集成的都集成下，给之后的自己以及屏幕前的你节省几十分钟的生命。</p></blockquote><h2 id="tldr"><a class="markdownIt-Anchor" href="#tldr"></a> TL;DR</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 0. 安装好windows terminal &amp; wsl ubuntu后：</span><br><span class="hljs-comment">## 1. 安装zsh并切换</span><br>sudo apt-get update<br>sudo apt-get install -y zsh<br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><br>chsh -s /bin/zsh<br><br><span class="hljs-comment">## 2. 安装zsh拓展</span><br><span class="hljs-comment"># syntax highlighting</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br><span class="hljs-comment"># zsh-autosuggestions</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br>sed -i <span class="hljs-string">&#x27;s/^plugins=.*/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/&#x27;</span> ~/.zshrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export TERM=xterm-256color  # 使autosuggestions半透明&#x27;</span> &gt;&gt; ~/.zshrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export HOMEBREW_NO_AUTO_UPDATE=true  # no update when use brew&#x27;</span> &gt;&gt; ~/.zshrc<br><br><span class="hljs-comment">## 3. 修改 on-my-zsh主题 &amp; windows terminal主题 </span><br>sed -i <span class="hljs-string">&#x27;s/^ZSH_THEME=.*/ZSH_THEME=&quot;ys&quot;/&#x27;</span> ~/.zshrc<br><br><span class="hljs-comment">## 3.1 手动执行 ↓↓↓</span><br><span class="hljs-comment"># [WindowsTerminal-&gt;Settings-&gt;OpenJsonFile] 复制如下内容到 schemes:[]</span><br>&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Dracula&quot;</span>,<br>  <span class="hljs-string">&quot;black&quot;</span>: <span class="hljs-string">&quot;#21222c&quot;</span>,<br>  <span class="hljs-string">&quot;red&quot;</span>: <span class="hljs-string">&quot;#ff5555&quot;</span>,<br>  <span class="hljs-string">&quot;green&quot;</span>: <span class="hljs-string">&quot;#50fa7b&quot;</span>,<br>  <span class="hljs-string">&quot;yellow&quot;</span>: <span class="hljs-string">&quot;#f1fa8c&quot;</span>,<br>  <span class="hljs-string">&quot;blue&quot;</span>: <span class="hljs-string">&quot;#bd93f9&quot;</span>,<br>  <span class="hljs-string">&quot;purple&quot;</span>: <span class="hljs-string">&quot;#ff79c6&quot;</span>,<br>  <span class="hljs-string">&quot;cyan&quot;</span>: <span class="hljs-string">&quot;#8be9fd&quot;</span>,<br>  <span class="hljs-string">&quot;white&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-string">&quot;brightBlack&quot;</span>: <span class="hljs-string">&quot;#6272a4&quot;</span>,<br>  <span class="hljs-string">&quot;brightRed&quot;</span>: <span class="hljs-string">&quot;#ff6e6e&quot;</span>,<br>  <span class="hljs-string">&quot;brightGreen&quot;</span>: <span class="hljs-string">&quot;#69ff94&quot;</span>,<br>  <span class="hljs-string">&quot;brightYellow&quot;</span>: <span class="hljs-string">&quot;#ffffa5&quot;</span>,<br>  <span class="hljs-string">&quot;brightBlue&quot;</span>: <span class="hljs-string">&quot;#d6acff&quot;</span>,<br>  <span class="hljs-string">&quot;brightPurple&quot;</span>: <span class="hljs-string">&quot;#ff92df&quot;</span>,<br>  <span class="hljs-string">&quot;brightCyan&quot;</span>: <span class="hljs-string">&quot;#a4ffff&quot;</span>,<br>  <span class="hljs-string">&quot;brightWhite&quot;</span>: <span class="hljs-string">&quot;#ffffff&quot;</span>,<br>  <span class="hljs-string">&quot;background&quot;</span>: <span class="hljs-string">&quot;#282a36&quot;</span>,<br>  <span class="hljs-string">&quot;foreground&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-string">&quot;cursorColor&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-string">&quot;selectionBackground&quot;</span>: <span class="hljs-string">&quot;#44475a&quot;</span><br>&#125;<br><span class="hljs-comment"># [WindowsTerminal-&gt;Settings-&gt;Ubuntu 2x.xx.xx LTS-&gt;Appearance-&gt;Corol scheme] 修改为Dracula</span><br></code></pre></td></tr></table></figure><h2 id="0-安装好windows-terminal-wsl-ubuntu"><a class="markdownIt-Anchor" href="#0-安装好windows-terminal-wsl-ubuntu"></a> 0. 安装好windows terminal &amp; wsl ubuntu</h2><p>windows terminal 这个基本上win11都自带了，如果是 win10 可以去 Windows Store 或者手动安装下，这里就不再赘述。<br />而且我看最新版的 terminal 在你切换至 ubuntu 22 的页面时如果没有安装也会直接帮你安装，也是十分便捷了。</p><h2 id="1-安装zsh并切换"><a class="markdownIt-Anchor" href="#1-安装zsh并切换"></a> 1. 安装zsh并切换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br>sudo apt-get install -y zsh<br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSLhttps://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><br>chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><h2 id="2-安装zsh拓展"><a class="markdownIt-Anchor" href="#2-安装zsh拓展"></a> 2. 安装zsh拓展</h2><h3 id="syntax-highlighting"><a class="markdownIt-Anchor" href="#syntax-highlighting"></a> syntax highlighting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><h3 id="zsh-autosuggestions"><a class="markdownIt-Anchor" href="#zsh-autosuggestions"></a> zsh-autosuggestions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br>sed -i <span class="hljs-string">&#x27;s/^plugins=.*/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/&#x27;</span> ~/.zshrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export TERM=xterm-256color  # 使autosuggestions半透明&#x27;</span> &gt;&gt; ~/.zshrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export HOMEBREW_NO_AUTO_UPDATE=true  # no update when use brew&#x27;</span> &gt;&gt; ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="3-修改-on-my-zsh主题-windows-terminal主题"><a class="markdownIt-Anchor" href="#3-修改-on-my-zsh主题-windows-terminal主题"></a> 3. 修改 on-my-zsh主题 &amp; windows terminal主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s/^ZSH_THEME=.*/ZSH_THEME=&quot;ys&quot;/&#x27;</span> ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="31-手动执行"><a class="markdownIt-Anchor" href="#31-手动执行"></a> 3.1 【手动执行】</h2><p>由于windows terminal路径后缀有随机性，这里只能手动…</p><ol><li>【WindowsTerminal-&gt;Settings-&gt;OpenJsonFile】 复制如下内容到 schemes:[]</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Dracula&quot;</span>,<br>  <span class="hljs-attr">&quot;black&quot;</span>: <span class="hljs-string">&quot;#21222c&quot;</span>,<br>  <span class="hljs-attr">&quot;red&quot;</span>: <span class="hljs-string">&quot;#ff5555&quot;</span>,<br>  <span class="hljs-attr">&quot;green&quot;</span>: <span class="hljs-string">&quot;#50fa7b&quot;</span>,<br>  <span class="hljs-attr">&quot;yellow&quot;</span>: <span class="hljs-string">&quot;#f1fa8c&quot;</span>,<br>  <span class="hljs-attr">&quot;blue&quot;</span>: <span class="hljs-string">&quot;#bd93f9&quot;</span>,<br>  <span class="hljs-attr">&quot;purple&quot;</span>: <span class="hljs-string">&quot;#ff79c6&quot;</span>,<br>  <span class="hljs-attr">&quot;cyan&quot;</span>: <span class="hljs-string">&quot;#8be9fd&quot;</span>,<br>  <span class="hljs-attr">&quot;white&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-attr">&quot;brightBlack&quot;</span>: <span class="hljs-string">&quot;#6272a4&quot;</span>,<br>  <span class="hljs-attr">&quot;brightRed&quot;</span>: <span class="hljs-string">&quot;#ff6e6e&quot;</span>,<br>  <span class="hljs-attr">&quot;brightGreen&quot;</span>: <span class="hljs-string">&quot;#69ff94&quot;</span>,<br>  <span class="hljs-attr">&quot;brightYellow&quot;</span>: <span class="hljs-string">&quot;#ffffa5&quot;</span>,<br>  <span class="hljs-attr">&quot;brightBlue&quot;</span>: <span class="hljs-string">&quot;#d6acff&quot;</span>,<br>  <span class="hljs-attr">&quot;brightPurple&quot;</span>: <span class="hljs-string">&quot;#ff92df&quot;</span>,<br>  <span class="hljs-attr">&quot;brightCyan&quot;</span>: <span class="hljs-string">&quot;#a4ffff&quot;</span>,<br>  <span class="hljs-attr">&quot;brightWhite&quot;</span>: <span class="hljs-string">&quot;#ffffff&quot;</span>,<br>  <span class="hljs-attr">&quot;background&quot;</span>: <span class="hljs-string">&quot;#282a36&quot;</span>,<br>  <span class="hljs-attr">&quot;foreground&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-attr">&quot;cursorColor&quot;</span>: <span class="hljs-string">&quot;#f8f8f2&quot;</span>,<br>  <span class="hljs-attr">&quot;selectionBackground&quot;</span>: <span class="hljs-string">&quot;#44475a&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>【WindowsTerminal-&gt;Settings-&gt;Ubuntu 2x.xx.xx LTS-&gt;Appearance-&gt;Corol scheme】 修改为 <strong>Dracula</strong></li></ol><h2 id="over"><a class="markdownIt-Anchor" href="#over"></a> Over</h2>]]></content>
    
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>脚本</tag>
      
      <tag>备忘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023了，给自己定个小计划</title>
    <link href="/2023/01/28/2023%E4%BA%86%EF%BC%8C%E7%BB%99%E8%87%AA%E5%B7%B1%E5%AE%9A%E4%B8%AA%E5%B0%8F%E8%AE%A1%E5%88%92/"/>
    <url>/2023/01/28/2023%E4%BA%86%EF%BC%8C%E7%BB%99%E8%87%AA%E5%B7%B1%E5%AE%9A%E4%B8%AA%E5%B0%8F%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p>在我这个“古板”的人眼中，总得是过了春节才觉得是翻到了新的一年，所以元旦就不算2023啦ww。</p><p>今天处理网站的备案信息时翻看了下之前的博文，才发现已经一年没更新了（什么史诗级鸽子精(○´･д･)<br />2021 与 2023 间有个断档，如果硬要说的话，毕业论文和打工后不断从身后逼近的“寒气”勉强可以算作怠惰的借口。<br />人嘛，是不依靠点什么就很难活下去的生物呢。</p><p>言归正传，2022年虽然也应工作要求写了些东西，但是一是在内网发布，不太好公开出来；二是没有太多的普适性，想必也不太帮得上大家，索性就让他烂在那里，等一个有缘人了。</p><p>仔细想想，虽然自诩已经是一个「成熟的社会人」了，但是果然理想和现实之间的差距还是很大，有时会感觉到迷茫，有时又会觉得自己想得太多、做得太少。<br />工作方面，没做出什么亮眼的成绩也没犯下大事儿，只能说堪堪活着，寒冬下普遍都不好过。偶尔瞅了一眼一起培训的伙伴，活到过年的也只半数有余，令人唏嘘。<br />生活方面，结交了一些新朋友，吃到了好吃的刨冰店，但没能和重要的朋友握手言和，有些遗憾却也无可奈何。只能看时间能否变为最锋利的朗基努斯之枪吧。</p><p>鼠鼠我呀，有好多的事情想在今年去做呢。<br />想学学引擎，搓点有意思的东西出来玩玩儿；<br />想鼓捣点音乐，不再只做听众，而是共振给别人；<br />想彻底打通搁置好久的FF、樱之诗…</p><p>可是总是时间太少，所求太多。有人说人的痛苦就来自于能力和欲望的不匹配，能力够不着欲望的边界故而心有不甘，辗转反侧。我觉得有点道理，现阶段最需要的，还是把好不容易挤出来的时间，集中力量攻克最紧急的事儿。</p><blockquote><p>Stay foolish, stay hungry.</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>抛弃不安全的rm，拥抱trash</title>
    <link href="/2021/09/02/%E6%8A%9B%E5%BC%83%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84rm%EF%BC%8C%E6%8B%A5%E6%8A%B1trash/"/>
    <url>/2021/09/02/%E6%8A%9B%E5%BC%83%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84rm%EF%BC%8C%E6%8B%A5%E6%8A%B1trash/</url>
    
    <content type="html"><![CDATA[<blockquote><p>起因：晕头转向忙了一天之后，发现工作保存的文件放错了文件夹，于是乎想<code>mv *.jpg ../parent_folder</code>到正确的文件夹，结果手滑输入成了<code>rm *.jpg ../parent_folder</code>，而rm又没有回收站功能。。啪的一下一下午的工作白费了:(<br />我开始寻找恢复的方法，最后因为wsl和真正的Linux还是有区别的，不能直接复用，再加上嫌麻烦最后只好重新做了一遍。</p></blockquote><p>经过这番折腾，我终于意识到了“老生常谈”的<code>rm</code>删库跑路离我们并不遥远，遂开始寻找替代方案。</p><h2 id="方案1alias-rmrm-iv"><a class="markdownIt-Anchor" href="#方案1alias-rmrm-iv"></a> 方案1：<code>alias rm=&quot;rm -iv&quot;</code></h2><p><code>rm</code>的设计者肯定也考虑过安全性这个问题，但是笔者认为在这个命令的传播过程中，太多的人图简单，使用<code>rm -rf</code>一把梭，照成了很多人的误用。<br />翻看手册后，我发现<code>rm</code>其实是有安全选项的，一个是<code>-i</code>，一个是<code>-I</code>，就是说在进行多个删除操作或是递归删除子文件夹时，会有确认步骤。<code>-i</code>与<code>-I</code>的区别在于：<code>-i</code>总是确认，<code>-I</code>是只有重要或异常情况才确认（具体的说明可以<code>man rm</code>，此处就不再赘述）。<br /><code>-v</code>则是打印<code>rm</code>所做的所有操作，做到心知肚明。</p><blockquote><p>-i    prompt before every removal.<br />-I    prompt once before removing more than three files, or when removing recursively; less  intrusive  than  -i,  while still giving protection against most mistakes.<br />-v, --verbose     explain what is being done.</p></blockquote><p>所以第一个解决方案就是<code>alias rm=&quot;rm -iv&quot;</code>，即每次<code>rm</code>就执行<code>rm -iv</code>，这种方案安全性最高，每次操作都会要求确认并且有操作回显，但是就是及其麻烦，麻烦到什么地步呢？你想象一下你有一位仆人，不管干啥都要请示你一番，洗个衣服都要拿着一堆衣服挨个问你，是不是很崩溃的一种体验。。</p><h2 id="方案2构建回收站"><a class="markdownIt-Anchor" href="#方案2构建回收站"></a> 方案2：构建回收站</h2><p>第二种方案就是模仿GUI桌面中的做法，建一个“回收站”，<code>rm</code>的时候就先放到回收站中，然后再配合定时清除回收站功能，就可以达到比较安全地删除的目的。<br /><a href="https://segmentfault.com/a/1190000018464527">这篇博文</a>自己实现了这个回收站，但是功能方面可能还有欠缺的地方。 （比方说当删除的文件和回收站的文件重命名时需要更改文件名使其不重复，而如果要恢复又要再改回来，这显然不是很方便）<br />这里笔者推荐<code>trash-cli</code>这个工具，它提供<strong>回收站</strong>、<strong>显示回收站</strong>、<strong>清空回收站</strong>、<strong>记录删除的文件信息</strong>（这样就可以避免重命名的问题）、<strong>恢复指定文件</strong>，除了命令行冗长之外几乎没有缺点。</p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>以Ubuntu为例，直接apt install即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install trash-cli<br></code></pre></td></tr></table></figure><h3 id="用法"><a class="markdownIt-Anchor" href="#用法"></a> 用法</h3><p>trash-cli 提供以下命令<br /><code>trash-put</code>： 将文件或目录放到回收站中<br /><code>trash-list</code> ：列出回收站中的文件或目录<br /><code>trash-restore</code>：从回收站中恢复文件或目录  （实测是<code>restore-trash</code>）<br /><code>trash-rm</code>：删除回收站中的文件<br /><code>trash-empty</code>：清空回收站</p><p>可以看到用起来还是很简单的，但是由于笔者是究极懒癌，能用2个字母完成的命令就不想用2个单词做，所以写了个简单的替换脚本<a href="https://github.com/czqmike/LinuxTools/blob/master/rm2ts.sh">rm2ts.sh</a>，可以实现一键替换并且定时清空回收站。<br />脚本重命名了<code>ts</code>, <code>lt</code>, <code>rt</code>这三个命令，分别表示删除（移至回收站）、显示回收站、从回收站恢复文件。<br />另外<code>trash-cli</code>没有提供一键恢复功能，只能一项一项手动点，这里给出一个替代方案，终端执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-keyword">while</span> ( <span class="hljs-built_in">echo</span> 0 | rt ); <span class="hljs-keyword">do</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">done</span>;<br></code></pre></td></tr></table></figure><p>这里放出代码，需要请自取。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-built_in">set</span> -Eeu<br><span class="hljs-built_in">set</span> -o pipefail<br><span class="hljs-comment"># set -x</span><br><br>config_file=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.bashrc&quot;</span>  <span class="hljs-comment"># or .zshrc</span><br><br>sudo apt-get install -y trash-cli<br><span class="hljs-comment">## !! Don&#x27;t alias rm to trash, it may break some scripts. </span><br><span class="hljs-keyword">if</span> [ $(grep -c <span class="hljs-string">&#x27;alias rm=&#x27;</span> <span class="hljs-variable">$&#123;config_file&#125;</span>) -eq <span class="hljs-string">&#x27;0&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias rm=&quot;rm -I&quot;&#x27;</span> &gt;&gt; <span class="hljs-variable">$config_file</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ $(grep -c <span class="hljs-string">&quot;alias ts=&quot;</span> <span class="hljs-variable">$&#123;config_file&#125;</span>) -eq <span class="hljs-string">&#x27;0&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias ts=trash-put&#x27;</span> &gt;&gt; <span class="hljs-variable">$config_file</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ $(grep -c <span class="hljs-string">&quot;alias lt=&quot;</span> <span class="hljs-variable">$&#123;config_file&#125;</span>) -eq <span class="hljs-string">&#x27;0&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias lt=trash-list&#x27;</span> &gt;&gt; <span class="hljs-variable">$config_file</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment">## The moved files are in `~/.local/share/Trash/files`</span><br><span class="hljs-comment">## Use `while ( echo 0 | rt ); do true; done;` or cp to restore files more efficiently.</span><br><span class="hljs-keyword">if</span> [ $(grep -c <span class="hljs-string">&quot;alias rt=&quot;</span> <span class="hljs-variable">$&#123;config_file&#125;</span>) -eq <span class="hljs-string">&#x27;0&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias rt=restore-trash&#x27;</span> &gt;&gt; <span class="hljs-variable">$config_file</span> <span class="hljs-comment"># or trash-restore, the former works in my own env :)</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment">## Disable clearing trash manually.</span><br><span class="hljs-comment"># echo &#x27;alias ct=trash-empty&#x27; &gt;&gt; $config_file</span><br><br><span class="hljs-built_in">source</span> <span class="hljs-variable">$config_file</span><br><br><span class="hljs-comment">## Clear trash each monday 12 A.M. automatically.</span><br>conf=<span class="hljs-string">&quot;.tempconf&quot;</span>_$(date <span class="hljs-string">&quot;+%Y%m%d-%H%M%S&quot;</span>)<br>crontab -l &gt; <span class="hljs-variable">$conf</span><br><span class="hljs-keyword">if</span> [ $(grep -c <span class="hljs-string">&quot;trash-empty&quot;</span> <span class="hljs-variable">$&#123;conf&#125;</span>) -eq <span class="hljs-string">&#x27;0&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;0 12 * * 1 trash-empty&quot;</span> &gt;&gt; <span class="hljs-variable">$conf</span> &amp;&amp; crontab <span class="hljs-variable">$conf</span><br><span class="hljs-keyword">fi</span><br>rm -f <span class="hljs-variable">$conf</span><br><br><span class="hljs-built_in">echo</span> <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;[info] cmd `rm` has been replaced with `ts`, `lt`, `rt` and auto trash clearing has been set.&#x27;</span><br></code></pre></td></tr></table></figure><p>需要注意的是，我这里并没有并没有直接把<code>rm</code> alias 成<code>trash-put</code>，而只是换成了安全性更高的<code>rm -i</code>，原因在于这样做<a href="https://github.com/andreafrancia/trash-cli#can-i-alias-rm-to-trash-put">可能会破坏其他脚本的行为，出现不可预料的错误</a>，所以还是推荐在想<code>rm</code>的时候用<code>ts</code>代替，这样用户也清楚自己在做什么，也不会产生安全问题，我认为是一种比较好的折中方案了。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>因为吃了次苦头，笔者以后将使用<code>ts</code>替换系统自带的<code>rm</code>，并且写了个简单的脚本完成一键替换。大家以后也请务必小心<code>rm</code>的使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>奇技淫巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次blog排错</title>
    <link href="/2021/07/23/%E8%AE%B0%E4%B8%80%E6%AC%A1blog%E6%8E%92%E9%94%99/"/>
    <url>/2021/07/23/%E8%AE%B0%E4%B8%80%E6%AC%A1blog%E6%8E%92%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h2 id="记一次blog排错"><a class="markdownIt-Anchor" href="#记一次blog排错"></a> 记一次blog排错</h2><blockquote><p>因为听信了网上的一个建议，reboot server想去激活<code>.bashrc</code>，结果导致好不容易稳定的blog又挂了:(<br />刚好今天有点时间，就来debug了下挂的原因并在此记录一下思考过程。</p></blockquote><p>先讲一下现在的blog架构：<br />现在的blog架构是 [server -&gt; hexo.js (=hexo server -p 80) -&gt; pm2代理hexo.js] 一把梭。<br />版本管理方面则是<a href="https://github.com/czqmike/czqmike.github.io">github</a>上的双版本管理，用一个master分支发布编译后的静态页面文件，用hexo_source分支发布md源文件。<br />这个管理方案可以<a href="https://www.jianshu.com/p/57b5a384f234">参见此</a>。</p><p>之前也常常出现防火墙是ok的，ping得通，端口开放了，程序运行状态正常但是就是刷不出来blog的情况，但是都没有在意，以为是方案稳定性不够的锅。</p><h3 id="出现问题"><a class="markdownIt-Anchor" href="#出现问题"></a> 出现问题</h3><p>这次重启后也是照常跑服务器脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo bash run_back.sh <span class="hljs-comment"># run_back.sh = pm2 start hexo.js --watch</span><br></code></pre></td></tr></table></figure><p>出现的问题也还是网站无法访问，server ping得通，我开始<code>ps</code>看有无异常：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 ps<br></code></pre></td></tr></table></figure><p>结果如下：<br /><img src="pm2_ls.png" alt="pm2_ls结果" /></p><p>可以看出，有个不明所以的小方框一直在自增，进程states一下变成<code>online</code>一下变成<code>stopping</code>.</p><h3 id="定位问题"><a class="markdownIt-Anchor" href="#定位问题"></a> 定位问题</h3><p>我有点疑惑，查阅文档，发现有<code>describe</code>命令可以看pm2详细的参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 describe 0<br></code></pre></td></tr></table></figure><p><img src="pm2_description.png" alt="pm2进程详细结果" /><br />结果发现这短短的几十秒里进程重启了42次！</p><p>于是我打开log看详细过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.pm2/logs/hexo-out.log<br></code></pre></td></tr></table></figure><p><img src="pm2_log.png" alt="pm2运行log" /><br />一看log，原来是80端口被占用导致的进程启动失败，而pm2会自动重启失败的进程，重启过程中会发现还是被占用于是继续重启，最终导致无线月读。。</p><h3 id="解决问题"><a class="markdownIt-Anchor" href="#解决问题"></a> 解决问题</h3><p>知道了问题在哪，接下来就好办了，找到进程杀死之即可，netstat发现有个pm2的godmode进程在后台清不掉，kill掉后手动重启pm2服务后发现网站能打开了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat | grep 80<br>sudo <span class="hljs-built_in">kill</span> $(pm2_godmode_pid)<br>sudo pm2 start hexo.js<br></code></pre></td></tr></table></figure><p>Over.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>pm2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再识Attention Mechanism</title>
    <link href="/2021/05/06/%E5%86%8D%E8%AF%86Attention/"/>
    <url>/2021/05/06/%E5%86%8D%E8%AF%86Attention/</url>
    
    <content type="html"><![CDATA[<blockquote><p>来再次刷下Attention机制。这次准备从Attention的原理，到Transformer的构成、原理、应用、优缺点，再到Bert的基本原理，Bert的变种好好梳理一遍。</p></blockquote><h2 id="attention-mechanism"><a class="markdownIt-Anchor" href="#attention-mechanism"></a> Attention Mechanism</h2><p>Attention本质上就是一个内容表示<strong>向量</strong> (vector)，表示之前的各个元素对下个元素产生的影响，这种机制可以建立其序列之间的长距离依赖关系，并且得益于并行化，Attention的速度要快于LSTM等传统的建立依赖关系的结构。<br />这个向量的详细产生机制可以参见笔者的这篇<a href="http://czqmike-server.cn/2020/11/13/%E5%88%9D%E6%8E%A2Attention-Mechanism/">初探Attention Mechanism</a>。<br />今天来详细学习下Attention的分支：Soft Attention、Hard Attention、Local Attention、Global Attention、Self Attention and Attention over Attention…（晕了已经😢）</p><p>这些Attention的方式按照计算区域、所用信息、结构层次等方面来分类。</p><p><img src="Attention_Classifications.png" alt="Attention分类" /></p><h3 id="计算区域"><a class="markdownIt-Anchor" href="#计算区域"></a> 计算区域</h3><p>按照计算区域划分的话，可以分为</p><ol><li>Soft Attention<br />比较常见的Attention方式，对所有key求权重概率，每个key都有一个对应的权重，是一种<strong>全局</strong>的计算方式，（也可以叫Global Attention）。这种方式比较理性，参考了所有key的内容再进行加权，但是计算量可能会比较大。</li><li>Hard Attention<br />这种方式则是<strong>精准定位</strong>到某个key，其余key就都不管了。相当于这个key的概率是1，其余key的概率全部是0。这种对齐方式要求很高，要求一步到位，如果没有正确对齐，会带来很大的影响。<br />另一方面，因为其不可导，所以一般需要用强化学习的方法进行训练。</li><li>Local Attention<br />这种方式是上述两种方式的一个折中。先用Hard Attention定位到某个地方，再以这个地方为中心得到一个窗口区域，在这个窗口区域中采用Soft Attention。</li></ol><h3 id="所用信息"><a class="markdownIt-Anchor" href="#所用信息"></a> 所用信息</h3><p>现在假设我们要对一个句子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算Attention，但是一段中还有其他的很多句子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">S_{m}, S_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>啊。那么用不用其他句子的信息来Attention就是一个很大的区别。<br />我们把这种其他句子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>n</mi></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">S_{m}, S_{n}...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>称作<strong>外部信息</strong>。<br />如果Attention使用了外部信息，则称其为<code>General Attention</code>，否则则为<code>Local Attention</code>。</p><h3 id="结构层次"><a class="markdownIt-Anchor" href="#结构层次"></a> 结构层次</h3><p>根据结构来划分的话，可以分为：</p><ol><li>单层Attention<br />比较普遍的做法，即一个query只对一段文本进行一次attention</li><li>多层Attention<br />一般用于文本具有层次关系的模型。<br />假设我们把一个document划分成多个句子，在第一层，我们对每个句子使用attention计算出一个句向量，表示对句子特征的理解；<br />在第二层，我们再对所有句向量做一次Attention，计算出一个文档向量，表示对句子间关系的理解。最后用这个文档向量去做任务。<br />值得一提的是，其实第一层和第二层都是一个单层Attention，只不过组合起来加深模型的理解而已。</li><li>多头Attention (Multi-head Attention)<br />用多个query对一段文本做了多次attention，每个query关注原文的不同部分（如q1关注句法，q2关注实体间关系…）。其实就相当于重复做多次单层attention</li></ol><h2 id="transformer"><a class="markdownIt-Anchor" href="#transformer"></a> Transformer</h2><p>Transformer, 即只采用Attention而不结合CNN或是RNN的架构，在各项任务上都取得了不错的成绩。<br />Transformer的作者认为，RNN / CNN的计算顺序是从左到右固定的，而这样固定的顺序会带来两个坏处：</p><ol><li>时间片<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>的计算依赖于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时刻的计算结果，限制了模型的并行能力。</li><li>由于顺序计算的过程中信息会丢失，所以对于特别长距离的依赖，LSTM仍然无能为力。<br />Transformer的提出解决了上述两个问题：首先它不需要等待前一时刻的状态，具有良好的并行性，符合现代的GPU架构。<br />其次它将任意两个单词间的依赖变为常量，不再有信息丢失的问题。</li></ol><p>Transformer Block结构如下图：<br /><img src="Transformer_Structure.png" alt="Transformer Block" /><br />可以看出总体上分为两个部分：Encoder（左半）和Decoder（右半）。<br />一个完整的可训练的网络由6个Encoder和Decoder组成。</p><p>上面那个图是论文中的图，稍微有点复杂。把他简化一下：<br /><img src="The_transformer_encoders_decoders.png" alt="简化后的总体流程" /><br />注意为了不重复绘图，采取了和RNN结构图一样的策略，即只画出了一个block。而实际上，在对句子进行处理时，block是像穿葫芦串一样连接起来的，并且如果在机器翻译等生成式的任务中，当前word的输出需要前一个word的hidden state。</p><p>再来说Block里面的层，每个Encoder是由一层Self-Attention和一层Feed Forward Neural Network (FFN)组成的，这样可以获得输出的Attention表示。<br />而每个Decoder则是由一层Self Attention，一层Encoder-Decoder Attention和一层FFN组成的。<br />可以理解为先用Self Attention理解Encoder后的向量，然后用Encoder-Decoder Attention进行翻译，最后用FFN输出结果。<br />具体的操作我们后面再细谈。</p><h3 id="self-attention"><a class="markdownIt-Anchor" href="#self-attention"></a> Self Attention</h3><p>Self Attention是Transformer里面最为核心的内容，其思想是在一个输入的句子向量中，为每个词向量都找到一个权重，这个权重代表它和其他词向量的<strong>关联程度</strong>。<br />这个权重向量我们先称其为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>，产生方式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>=</mo><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Z = Attention(Q, K, V) = Softmax(\frac{QK^{T}}{\sqrt{d_{k}}})V </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.448331em;vertical-align:-0.93em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.25278em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span></span></p><p>注意到我们这里使用了Q, K, V这三个向量来计算。那么这三个向量是什么呢？<br />简单来说就是通过线性层生成的（万能的矩阵相乘😅），代表词向量间相关性的一些向量。<br />词向量的<code>shape = [1, dimension] = [1, 512]</code>；权值矩阵的<code>shape = [512, 64]</code>；Q, K, V的<code>shape = [1, 64]</code>.<br />举一个在网上购物商店买东西的例子：我们输入一个查找项Query，系统根据这个Query列举出数据库中商品的Key，然后从中选出我们要的最相近的那个Value。<br />然后再来解释下上面产生<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>的那个公式，我们通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">K^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span>的点积计算出查询和数据库中Key的相似性，用 dimension开根号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{d_{k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.18278000000000005em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span></span></span></span>做归一化，并且通过Softmax给出一个分数。<br />最终将分数和Value相乘得到Attention向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>。(我个人认为Value向量反应了输入词向量的关键特征，类似LSTM中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)</p><blockquote><p>插入一点内容无关的见解，现在很多网络的设计思路让我感觉怪异的一点是，不同于传统编程是人去设计一个算法、一个思路，计算机去完美地执行它；神经网络中的设计更像是我<strong>假定你 (NN) 能产生一个我需要的结果</strong>，然后我在使用这个结果的基础上去设计一套算法，并且喂数据、反向传播训练，最后发现欸嘿竟然真的work了！这种先有蛋后有鸡的设计思路一直让我很不适应…<br />按照这种思路来思考的话，我们设计的算法真的贴合NN吗？如果NN自己就能做到这一点，我们的算法是否画蛇添足了呢？<br /><strong>Don’t try to understand it. Feel it.</strong> – 《Tenet》</p></blockquote><h3 id="feed-forward-neural-network-ffn"><a class="markdownIt-Anchor" href="#feed-forward-neural-network-ffn"></a> Feed Forward Neural Network (FFN)</h3><p>FFN就是一个简单的ReLU+线性层</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>Z</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">FFN(Z) = Linear_{2}(ReLU(Linear_{1}(Z))) = max(0, ZW_{1} + b_{1})W_{2} + b_{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">ffn_1 = nn.Dense(hidden_size, activation=<span class="hljs-string">&#x27;relu&#x27;</span>)<br>ffn_2 = nn.Dense(units, activation=<span class="hljs-string">&#x27;identity&#x27;</span>)<br>ffn_2(ffn_1(X))<br></code></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/75787683">FFN的作用</a>：</p><ol><li>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>映射到一个更大维度的特征空间，然后使用ReLU引入非线性进行筛选，最后恢复回原始维度。</li><li>Transformer在抛弃了 LSTM 结构后，FFN 中的 ReLU成为了一个主要的提供非线性变换的单元。</li></ol><h3 id="position-encoding-position-embedding"><a class="markdownIt-Anchor" href="#position-encoding-position-embedding"></a> Position Encoding &amp; Position Embedding</h3><p><a href="https://zhuanlan.zhihu.com/p/347904940">这篇文章</a>关于position encoding总结的不错，值得一看。<br />尽管说了Transformer的这么多设计，但是本质上它依然只是个能力更强的词袋 (CBOW) 模型而已，因为其不具备捕捉序列顺序的能力。<br />为了解决这个问题，Transformer在编码词向量的时候加入了位置信息，这一技术称之为<code>Position Encoding</code>(要和Bert的Position Embedding区分开来)。<br />这两个的区别是一个是可以解决任意长度的位置编码 (encode)，而一个是映射到固定的区间。<br /><code>Position Encoding</code>的方式有很多，最简单是绝对坐标编码<code>0, 1, 2...</code>。<br />但是这样的方式会造成在位置向量叠加的时候对index大的元素有偏见。<br />Transformer采用的是<code>sin-cos</code>规则，使用了sin和cos的线性变换来encode位置信息。</p><blockquote><p>线性变换：<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>α</mi><mo>+</mo><mi>β</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>α</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>β</mi><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">sin(\alpha+\beta) = sin{\alpha}cos{\beta} + cos{\alpha}sin{\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>α</mi><mo>+</mo><mi>β</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>β</mi><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>α</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">cos(\alpha+\beta) = cos{\alpha}cos{\beta} + sin{\alpha}sin{\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span></span></p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>E</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow><mrow><mn>1000</mn><msup><mn>0</mn><mfrac><mrow><mn>2</mn><mi>i</mi></mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mfrac></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PE(pos, 2i) = sin(\frac{pos}{10000^{\frac{2i}{d_{model}}}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.11949em;vertical-align:-1.01193em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.12193em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1219299999999999em;"><span style="top:-3.5233700000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8550857142857142em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34963999999999995em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5937428571428571em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.35193em;"><span class="pstrut" style="height:3.12193em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.79893em;"><span class="pstrut" style="height:3.12193em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01193em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>E</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow><mrow><mn>1000</mn><msup><mn>0</mn><mfrac><mrow><mn>2</mn><mi>i</mi></mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mfrac></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PE(pos, 2i + 1) = cos(\frac{pos}{10000^{\frac{2i}{d_{model}}}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.11949em;vertical-align:-1.01193em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.12193em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1219299999999999em;"><span style="top:-3.5233700000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8550857142857142em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34963999999999995em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5937428571428571em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.35193em;"><span class="pstrut" style="height:3.12193em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.79893em;"><span class="pstrut" style="height:3.12193em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01193em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>可以注意到，在上面这2个公式中，奇数个index和偶数个index的编码方式分别采用cos和sin。并且为了扩充映射的区间，加入了dimension <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{model}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>这个参数。<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{model}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>越大，映射的区间就越大。<br /><code>pos</code>需要除以一个量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>，并且这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>10000</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\theta \in [1, 10000]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span></span></span></span><br />可以把他理解为加入后就只在 sin / cos 的某一个频率上做映射。</p><p>直观的效果可以看下图：<br /><img src="position_encoding.jpg" alt="映射区间长度于句子长度、dimension之间的关系" /></p><!-- 饿的肚子疼，写不动了，明天继续🙄 --><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>Transformer的优势：</p><ul><li>对比LSTM (RNN)<br />可并行，并且在计算过程中不会出现不会出现信息丢失的问题</li><li>对比CNN<br />可以捕捉到句子依赖，具备更强的可解释性<br />Transformer的缺点：</li><li>局部信息的获取不如RNN和CNN</li><li>位置信息encode存在问题</li><li>顶层梯度消失</li><li>具有残差连接，多次连乘时会有梯度消失问题</li></ul><p>附两张炫酷的流程动图<br /><img src="transformer_decoding_1.gif" alt="Transformer流程1" /><br /><img src="transformer_decoding_2.gif" alt="Transformer流程2" /></p><h2 id="基于transformer的预训练语言模型"><a class="markdownIt-Anchor" href="#基于transformer的预训练语言模型"></a> 基于Transformer的预训练语言模型</h2><p>介于本文篇幅（懒），这里就简单介绍下BERT家族及相关的预训练语言模型的分类吧。</p><ul><li>单向特征表示的自回归预训练语言模型，统称为单向模型：<br />ELMO/ULMFiT/SiATL/GPT1.0/GPT2.0</li><li>双向特征表示的自编码预训练语言模型，统称为BERT系列模型<br />(BERT/MASS/UNILM/ERNIE1.0/ERNIE(THU)/MTDNN/ERNIE2.0/SpanBERT/RoBERTa)</li><li>双向特征表示的自回归预训练语言模型<br />XLNet</li></ul><p><img src="Pretrained_models.jpg" alt="现有的预训练语言模型" /></p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><p>[1] Attention机制，<a href="https://easyai.tech/ai-definition/attention/">https://easyai.tech/ai-definition/attention/</a><br />[2] A. Vaswani et al., “Attention Is All You Need,” arXiv:1706.03762 [cs], Dec. 2017, Accessed: Nov. 07, 2020. [Online]. Available: <a href="http://arxiv.org/abs/1706.03762">http://arxiv.org/abs/1706.03762</a>.<br />[3] Youngmi huang, Attention Is All You Need：基於注意力機制的機器翻譯模型, <a href="https://cyeninesky3.medium.com/attention-is-all-you-need-%E5%9F%BA%E6%96%BC%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%A9%9F%E5%88%B6%E7%9A%84%E6%A9%9F%E5%99%A8%E7%BF%BB%E8%AD%AF%E6%A8%A1%E5%9E%8B-dcc12d251449">https://cyeninesky3.medium.com/attention-is-all-you-need-基於注意力機制的機器翻譯模型-dcc12d251449</a><br />[4] 大师兄, 详解Transformer （Attention Is All You Need）, <a href="https://zhuanlan.zhihu.com/p/48508221">https://zhuanlan.zhihu.com/p/48508221</a><br />[5] 中二青年, transformer的Position encoding的总结, <a href="https://zhuanlan.zhihu.com/p/95079337">https://zhuanlan.zhihu.com/p/95079337</a><br />[6] Jack-Cui, 保姆级教程：图解Transformer, <a href="https://zhuanlan.zhihu.com/p/347904940">https://zhuanlan.zhihu.com/p/347904940</a><br />[7] Jay Alammar, The Illustrated Transformer, <a href="http://jalammar.github.io/illustrated-transformer/">http://jalammar.github.io/illustrated-transformer/</a><br />[8] 人工智能, Transformer 优缺点分析, <a href="https://zhuanlan.zhihu.com/p/330483336">https://zhuanlan.zhihu.com/p/330483336</a><br />[9] JayJay, nlp中的预训练语言模型总结(单向模型、BERT系列模型、XLNet), <a href="https://zhuanlan.zhihu.com/p/76912493">https://zhuanlan.zhihu.com/p/76912493</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Deep Learning</tag>
      
      <tag>Attention Mechanism</tag>
      
      <tag>Transformer</tag>
      
      <tag>Bert</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Faster R-CNN 回顾</title>
    <link href="/2021/05/05/Faster-R-CNN-Review/"/>
    <url>/2021/05/05/Faster-R-CNN-Review/</url>
    
    <content type="html"><![CDATA[<blockquote><p>因为要准备面试，现在要重新回顾下Faster R-CNN这个几年前我深受其折磨过的模型。不过也好，温故而知新嘛，现在重新看下之后，确实是有了不少新的感受。</p></blockquote><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>FR-CNN是一种端到端 (end-to-end) 的目标识别网络，它将feature extraction，proposal提取，bounding box回归，以及classification都整合在了一个网络中，因而准确度上进一步提升。</p><ul><li>one-stage &amp; two-stage<br />相比于Mobile SSD这种one-stage的模型，FR-CNN采用two-stage的方法（即先提取出可能存在目标的区域proposal，再对proposal进行分类）。<br />虽然这样势必会导致速度上的损失，但是也保证了更高的精准性，特别是当后续算法（如跟踪）及其依赖于目标识别的精度时。</li><li>总体流程<br />模型流程如下：<ol><li>给定一幅<code>P * Q</code>大小的图像，首先将其resize到<code>M * N</code>，送入网络。</li><li>用Conv Layer提取feature map，提取出的feature map将会在后面再次用到。</li><li>生成若干种anchor，并用RPN (Region Proposal Network) 判定anchors是positive还是negative，以及其偏移量 (regression)，计算得到的proposal。</li><li>将proposal和feature map送入RoI Pooling层，经过Full Connecting Layer和Softmax即可得到目标分类。<br /><img src="FR-CNN_Overview.png" alt="Faster R-CNN总体流程" /></li></ol></li></ul><h2 id="conv-layer"><a class="markdownIt-Anchor" href="#conv-layer"></a> Conv Layer</h2><p><img src="Conv_example.jpg" alt="conv层示例" /><br />Conv Layer包含了13个conv层，13个ReLU层，以及4个pooling层。<br />并且：</p><ul><li>conv层中<br /><code>kernel_size</code> = 3, <code>padding</code> = 1, <code>stride</code> = 1<br />这样可以保证conv层不改变输出矩阵的大小</li><li>pooling层中<br /><code>kernel_size</code> = 2, <code>padding</code> = 0, <code>stride</code> = 2<br />pooling层使输出的长宽都变为原来的1/2<br />最终Conv Layer的输出尺寸为<code>(M / 16) * (N / 16)</code><br />p.s. 如果对于这些CNN中的参数不是很了解，<a href="https://flat2010.github.io/2018/06/15/%E6%89%8B%E7%AE%97CNN%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0/">这篇博文</a>讲的很好，推荐学习。</li></ul><h2 id="rpn"><a class="markdownIt-Anchor" href="#rpn"></a> RPN</h2><p>对于目标识别，一种做法是先确定目标<strong>在哪里</strong>，然后再去识别它<strong>是什么</strong>，proposal就是为了解决目标在哪里的这个问题。<br />对于Faster R-CNN之前的目标检测模型，最耗时的部分是proposal提取。如SS算法，这个提取的过程耗时甚至比分类还要多，（Selective Search, SS, 通过比较相邻区域的相似度来把相似的区域合并到一起，重复这个过程最后得到目标区域proposal）严重影响了模型的实时性。<br />FR-CNN的作者就想，<strong>为什么不能直接用NN来进行proposal提取呢？</strong> 于是就诞生了RPN。</p><p>RPN主要做两件事：</p><ol><li>RPN Classification: 生成许多anchor（1:1, 1:2, 2:1的）然后用二分类去判定这些anchor划分的feature map是否是proposal (positive or negative)。</li><li>RPN bounding box regression: 光生成anchor是很不精确的，还要用bounding box regression去细化proposal的位置。</li></ol><h3 id="rpn-classification"><a class="markdownIt-Anchor" href="#rpn-classification"></a> RPN Classification</h3><p>首先讲第一件事，在feature map上均匀划分出<code>9 * h * w</code>个区域，其中h和w分别是feature map的高度和宽度。<br />然后就可以给每一个anchor打标签，判断其为背景还是前景。</p><blockquote><p>p.s. 不是所有的anchor都会拿来标注，一些规则如下：<br />1. feature map边界线上的anchor<br />2. 背景和前景交界地带的anchor不参与训练<br />3. 前景的个数不能超过batch size的一半</p></blockquote><p><img src="anchors.jpg" alt="生成的anchors" /></p><h3 id="rpn-bounding-box-regression"><a class="markdownIt-Anchor" href="#rpn-bounding-box-regression"></a> RPN bounding box regression</h3><p>首先看下bounding box的表示方法，Faster R-CNN的作者采用的是用4个参数，即box的中心点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，和box的宽<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>和高<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>来表示。</p><p>然后再来聊下bounding box regression，现在我们有positive anchor A和ground truth G，我们的目标是寻找一种关系，使得输入的A经过映射后得到一个跟G更加接近的回归窗口G’, 即：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A = (A_{x}, A_{y}, A_{w}, A_{h})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>G</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (G_{x}, G_{y}, G_{w}, G_{h})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>寻找一种变换F， 使：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>h</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>G</mi><mi>x</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>y</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>w</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>h</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(A_{x}, A_{y}, A_{w}, A_{h}) = (G&#x27;_{x}, G&#x27;_{y}, G&#x27;_{w}, G&#x27;_{h}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>G</mi><mi>x</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>y</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>w</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>G</mi><mi>h</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">)</mo><mo>≈</mo><mo stretchy="false">(</mo><msub><mi>G</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(G&#x27;_{x}, G&#x27;_{y}, G&#x27;_{w}, G&#x27;_{h}) \approx (G_{x}, G_{y}, G_{w}, G_{h})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.135em;vertical-align:-0.383108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><p>那么做何种变换F呢？比较简单的思路是：</p><ul><li>先做平移<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mi>x</mi><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><msub><mi>A</mi><mi>w</mi></msub><mo>⋅</mo><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>A</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">G&#x27;_{x} = A_{w} \cdot d_{x}(A) + A_{x} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mi>y</mi><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><msub><mi>A</mi><mi>h</mi></msub><mo>⋅</mo><msub><mi>d</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>A</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">G&#x27;_{y} = A_{h} \cdot d_{y}(A) + A_{y} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li>再做缩放<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal">′</mo></msup><mi>w</mi><mo>=</mo><msub><mi>A</mi><mi>w</mi></msub><mo>⋅</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G&#x27;{w} = A_{w} \cdot \exp(d_{w}(A))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal">′</mo></msup><mi>h</mi><mo>=</mo><msub><mi>A</mi><mi>h</mi></msub><mo>⋅</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G&#x27;{h} = A_{h} \cdot \exp(d_{h}(A))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">h</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p></li></ul><p>可以看出，其实就是用4个偏移量所近似的线性变换去控制anchor的位置和大小。</p><p>损失函数为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><mi mathvariant="normal">∣</mi><msubsup><mi>t</mi><mo>∗</mo><mi>i</mi></msubsup><mo>−</mo><msubsup><mi>W</mi><mo>∗</mo><mi>T</mi></msubsup><mo>⋅</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>A</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">Loss = \sum_{i}^{N}|t_{*}^{i} - W_{*}^{T} \cdot \phi(A^{i})|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>是对应anchor的feature map所组成的特征向量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">W_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是需要学习的参数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">t_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是真实值所对应的特征向量.</p><p>总结一下RPN的工作就是：<br /><strong>生成anchors -&gt; 用二分类器和Softmax提取positive anchors -&gt; 对positive anchors进行bounding box regression -&gt; 再Proposal Layer生成较为精确的proposals</strong></p><h2 id="roi-pooling"><a class="markdownIt-Anchor" href="#roi-pooling"></a> RoI Pooling</h2><h3 id="为啥需要roi-pooling"><a class="markdownIt-Anchor" href="#为啥需要roi-pooling"></a> 为啥需要RoI Pooling？</h3><p>对于传统的CNN (AlexNet and VGG)，当网络训练好后输入和输出的图像尺寸必须为固定值，如果输入图像大小不定，就必须要对图像进行处理。有2种解决方案：</p><ol><li>从图像中裁剪 (crop) 一部分传入网络</li><li>将图像缩放 (warp) 成一定大小后传入网络<br />而这两种方案都不尽人意，前者破坏了图像的完整性，后者改变了图像的原始形状信息。</li></ol><h3 id="如何解决"><a class="markdownIt-Anchor" href="#如何解决"></a> 如何解决</h3><p>那么Faster R-CNN提出的解决方案是什么呢？—— 池化！<br />既然想在尽量不改变图像信息的前提下得到固定size的输出，只需要将“重要的信息提取出来”就可以了。</p><p>RoI Pooling Layer forward过程如下：</p><ol><li>将proposal<code>M * N</code>按照一个scale参数（默认为1/16）映射回<code>M*scale * N*scale</code>大小</li><li>将每个proposal对应的feature map水平分为 <code>7 * 7</code>的网格</li><li>对网格的每一份都进行max pooling<br />最后就能得到<code>pooled_w * pooled_d</code> (<code>7 * 7</code>)大小的固定输出。</li></ol><h2 id="classification"><a class="markdownIt-Anchor" href="#classification"></a> Classification</h2><p>最后将RoI Pooling后得到的<strong>浓缩</strong>后的pooled feature map送入后续网络进行分类，网络结构如下图<br /><img src="classification.jpg" alt="classification流程图" /></p><p>即用Full Connect Layer和Softmax对pooled feature进行分类，<br />并且再次对bounding box进行regression，得到更精确的bbox。</p><h2 id="总结和思考"><a class="markdownIt-Anchor" href="#总结和思考"></a> 总结和思考</h2><p>到此Faster R-CNN的原理就讲解完了，其主要通过RPN采集图像中的proposal，再对proposal进行分类和微调来获得最终的分类结果和bbox。其中RPN和分类的CNN会共享一部分的卷积层，用以提高效率和准确性。<br />不得不说这个实现即使是在现在看也是非常的有意思，特别是RoI Pooling的设计很elegant<br />以前可能更多的是将其视作一个黑盒子来使用，这样的方式终究还是走不远的😢<br />虽然现在笔者的主攻方向是NLP，但是CV中的很多奇技淫巧乃至这两个任务本身就有很多的共通之处，还是有很多可以学习借鉴的地方。</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><p>[1] 张磊，从结构、原理到实现，Faster R-CNN全解析（原创），<a href="https://zhuanlan.zhihu.com/p/32702387">https://zhuanlan.zhihu.com/p/32702387</a><br />[2] 白裳，一文读懂Faster RCNN，<a href="https://zhuanlan.zhihu.com/p/31426458">https://zhuanlan.zhihu.com/p/31426458</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Deep Learning</tag>
      
      <tag>Computer Vision</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>久病成良医--从一次感冒聊下常见感冒药成分</title>
    <link href="/2021/04/24/%E4%B9%85%E7%97%85%E6%88%90%E8%89%AF%E5%8C%BB-%E4%BB%8E%E4%B8%80%E6%AC%A1%E6%84%9F%E5%86%92%E8%81%8A%E4%B8%8B%E5%B8%B8%E8%A7%81%E6%84%9F%E5%86%92%E8%8D%AF%E6%88%90%E5%88%86/"/>
    <url>/2021/04/24/%E4%B9%85%E7%97%85%E6%88%90%E8%89%AF%E5%8C%BB-%E4%BB%8E%E4%B8%80%E6%AC%A1%E6%84%9F%E5%86%92%E8%81%8A%E4%B8%8B%E5%B8%B8%E8%A7%81%E6%84%9F%E5%86%92%E8%8D%AF%E6%88%90%E5%88%86/</url>
    
    <content type="html"><![CDATA[<blockquote><p>又双叒叕感冒了，躺在床上翻来覆去睡不着，喉咙像一块发烫的马达似的，一直摊煎饼到三点多才勉强睡着。<br />这已经是今年第二次还是第三次感冒了，上个冬天才和论文一起混合双打过我的感冒又卷土重来。<br />看着被药店售货员推攘着买下的满满一提药，我半是迷茫，半是疑惑，不知从何下口…</p></blockquote><p>总之，为了搞清楚主要感冒药的成分，我查了下比较常用的几种成分，在此分享给大家。</p><h2 id="感冒分类"><a class="markdownIt-Anchor" href="#感冒分类"></a> 感冒分类</h2><p>最重要的一点是——感冒药分为<strong>病毒性</strong>（大部分）和<strong>细菌性</strong>感冒，其中病毒性感冒没有很好的针对性药物，而细菌性感冒可以用抗生素（如阿莫西林）但不推荐。</p><h2 id="感冒药成分分类"><a class="markdownIt-Anchor" href="#感冒药成分分类"></a> 感冒药成分分类</h2><p>感冒药的主要成分包括：对乙酰氨基酚、氯苯那敏、伪麻黄碱、金刚烷胺等。</p><ul><li><p>对乙酰氨基酚<br />主治<strong>发热、疼痛</strong>，是一种轻度镇痛剂；<br />作用机理为抑制中枢神经，减少前列腺素的生成；<br />过度使用可能会造成肝衰竭或者是红疹等不良反应。</p></li><li><p>氯苯那敏<br />主治<strong>流鼻涕、打喷嚏以及过敏</strong>，有一定程度抗抑郁和抗焦虑的作用；<br />作用机理：抢占组胺受体，抑制过敏；<br />不良反应是会让人<strong>产生睡意</strong>（吃了感冒药容易睡觉的原因），口干，小便滞留等。</p></li><li><p>伪麻黄碱<br />主治<strong>鼻塞</strong>，是一种兴奋剂；<br />作用机理：促进肾上腺素能受体，收缩血管；<br />不良反应包含失眠、紧张等。</p></li><li><p>右美沙芬<br /><strong>镇咳</strong>药物，其抑制咳嗽但是不抑制纤毛活动；<br />在体内被转化成右啡烷(dextrorphan)；<br />有一定的药物依赖性，<strong>许多药物（包括抗抑郁药）是CYP2D6的强效抑制剂，不可同时服用</strong>！！！</p></li><li><p>金刚烷胺<br /><strong>抗病毒</strong>，但收效甚微:(</p></li></ul><h2 id="tips"><a class="markdownIt-Anchor" href="#tips"></a> Tips</h2><ol><li><p>伪麻黄碱缓解鼻塞效果好，但不宜连续用超过7天</p></li><li><p>氯苯那敏缓解鼻涕、打喷嚏效果好，但会引起嗜睡，所以开车、开飞机不吃药</p></li><li><p>最常用的解热镇痛药是对乙酰氨基酚，但过量的对乙酰氨基酚会导致肝损伤</p></li><li><p>如果仅有头痛，那就用对乙酰氨基酚就行；如果有头痛、鼻塞、咳嗽，那就用复发制剂</p></li></ol><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>总的来说，现在病毒性感冒也即是通常的“流感”是没有特效药的，只能通过自身免疫系统将其清除感，冒药也只是让你在这个过程中更加舒服而已。<br />但是，如果真的难受到无可附加，也没有必要硬撑着，去药店买点上述成分的药吃吧！<br />笔者对中成药的效用持怀疑态度，与其说它是“药”，我更加相信它是保健品。<br />BTW，现在一般的感冒药都是“缝合怪”，也就是上述多种成分混合，有的还会加入中药成分，所以不用担心药效不足的问题。<br />最后，请谨遵医嘱，多喝岩浆，相信自己的免疫系统。</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><p>[1] Wikipedia. <a href="https://zh.wikipedia.org/wiki/%E5%AF%B9%E4%B9%99%E9%85%B0%E6%B0%A8%E5%9F%BA%E9%85%9A">对乙酰氨基酚</a>, <a href="https://zh.m.wikipedia.org/wiki/%E6%B0%AF%E8%8B%AF%E9%82%A3%E6%95%8F">氯苯那敏</a>, <a href="https://zh.wikipedia.org/wiki/%E9%87%91%E5%88%9A%E7%83%B7%E8%83%BA">金刚烷胺</a>, <a href="https://zh.wikipedia.org/wiki/%E4%BC%AA%E9%BA%BB%E9%BB%84%E7%A2%B1">伪麻黄碱</a>, <a href="https://zh.wikipedia.org/wiki/%E5%8F%B3%E7%BE%8E%E6%B2%99%E8%8A%AC">右美沙芬</a><br />[2]左左，同样是三九感冒药，80%的人分不清楚，<a href="https://zhuanlan.zhihu.com/p/344953047">https://zhuanlan.zhihu.com/p/344953047</a><br />[3]李鸿政医生，史上最全的感冒药大全（包含成分、剂量），买感冒药不再发愁！, <a href="https://zhuanlan.zhihu.com/p/53679276">https://zhuanlan.zhihu.com/p/53679276</a><br />[4]丁香医生，在中国，感冒治疗史就是一部药物滥用史，<a href="https://zhuanlan.zhihu.com/p/46779859">https://zhuanlan.zhihu.com/p/46779859</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>4月12日字节笔试踩坑</title>
    <link href="/2021/04/12/4%E6%9C%8812%E5%AD%97%E8%8A%82%E7%AC%94%E8%AF%95%E8%B8%A9%E5%9D%91/"/>
    <url>/2021/04/12/4%E6%9C%8812%E5%AD%97%E8%8A%82%E7%AC%94%E8%AF%95%E8%B8%A9%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<blockquote><p>投了字节的暑期实习，抽出一天集中练习了下算法题。<br />感觉这次笔试题比蓝桥杯国赛要稍微简单点，至少每个题都会有思路（捂脸）<br />但是不让用本地环境和查API实在是太折磨了，现在脱离Vim我已经不会打代码了。。</p></blockquote><h2 id="题目分布"><a class="markdownIt-Anchor" href="#题目分布"></a> 题目分布</h2><p>我报的是研发岗，总共4道编程题，分别是：</p><ol><li>凯撒密码实现，<strong>10’</strong></li><li>给两个字符串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">s, m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span></span></span></span>，求其子串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">m_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的组合总共有多少种不同的字符，<strong>30’</strong></li><li>给定大批次数据，每批给个 n * 5 的矩阵，代表n个分数数组。<br />选两个数组，数组中的五个数分别比较，取其中大的值暂存，然后取暂存的五个数中的最小值作为分数。最终使分数最大。<br />如：选出[1,2,3,4,5] 和 [5,4,3,2,1]<br />取最大后得到[5,4,3,4,5]，分数就是min[5, 4, 3, 4, 5] = 3，<strong>30’</strong></li><li>14-pullze（听说叫华容道），<strong>30’</strong><br />通过移动操作使矩阵变为</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[ \begin{matrix}1 &amp; 2 &amp; 3 &amp; 4 \\5 &amp; 6 &amp; 7 &amp; 8 \\9 &amp; 10 &amp; 11 &amp; 12 \\13 &amp; 14 &amp; 0 &amp; 0\end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2><blockquote><p>0%, AC, 34%, 20%</p></blockquote><ol><li>程序很简单，但是有个if case错了死活没调试出来，也浪费了时间。。考试结束后十分钟改对了:(</li><li>一开始被“组合”搞懵了，看了半天。<br />后来直接取子串相加，建一个256长度的数组作为桶（桶排序）来统计出现次数，把<code>cin</code> <code>cout</code> 换成<code>scanf</code> <code>printf</code>就AC了。</li><li>暴力码了一遍没时间优化了，<code>v1</code> <code>v2</code>为选取的数组，核心代码: <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">score = MAXINT;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; ++i) &#123;<br>    score = <span class="hljs-built_in">min</span>(score, <span class="hljs-built_in">max</span>(v1[i], v2[i]));<br>&#125;<br></code></pre></td></tr></table></figure></li><li>写了个初步的程序，判断有数不在他应该在的位置并且周围有0时就移到0上去，拿了20%分后就没时间改了。</li></ol><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>总之就是怪自己练的有点少，一口也吃不出个胖子。日后慢慢来吧。倒是找回了本科时天天码题的感觉，不也挺好的么:)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>通过WSL远程使用Linux上的GUI程序</title>
    <link href="/2021/03/31/%E9%80%9A%E8%BF%87WSL%E4%BD%BF%E7%94%A8Linux%E4%B8%8A%E7%9A%84GUI%E7%A8%8B%E5%BA%8F/"/>
    <url>/2021/03/31/%E9%80%9A%E8%BF%87WSL%E4%BD%BF%E7%94%A8Linux%E4%B8%8A%E7%9A%84GUI%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面水字数"><a class="markdownIt-Anchor" href="#写在前面水字数"></a> 写在前面<s>水字数</s></h2><blockquote><p>好久没有水文章了，一半是因为这个学期学业繁忙，论文改的焦头烂额的。另一半就是人的惰性了。<br />最近沉迷于<a href="https://space.bilibili.com/94742590?from=search&amp;seid=18253544675360496862">Veritasium真理元素</a>的视频，里面讲了不少物理数学方面的有趣现象和说明，感觉质量还是挺高的，在此推销一波~</p></blockquote><h2 id="正题"><a class="markdownIt-Anchor" href="#正题"></a> 正题</h2><p>直接进入正题。为了在远程环境上看到Python脚本画出来的图，以前我都是使用<code>plt.savefig(...)</code>保存成图像再看。<br />今天尝试nltk的自然语言处理库时发现其中自带的画图函数好像不支持保存，Stackoverflow上的方法要先把图画出来-&gt;保存成ps矢量图-&gt;再用工具把矢量图转化成位图，这样才能在VsCode中看到输出的图像。。<br />我的洁癖+懒惰症第一时间就让我打消了这个念头，而且也不优雅。</p><p>然后我就开始寻找更直接的方法–对，就是直接在Win上使用Linux的GUI程序。</p><p>之前实习的时候看师傅做过一次，也是用的WSL调用了一个GUI程序。<br />在网上搜了一下，发现和我一样闲并且有强迫症的人还真不少。😃<br />效果如下：<br /><img src="WSL_GUI.png" alt="在Win上直接使用WSL/Remote Linux的GUI程序" /></p><p>大致上分为两个步骤：</p><ul><li><ol><li>服务器端配置X11转发。</li></ol></li><li><ol start="2"><li>客户端配置X11接收程序，将其转化为界面。</li></ol></li></ul><h3 id="服务端配置"><a class="markdownIt-Anchor" href="#服务端配置"></a> 服务端配置</h3><p>这里的服务端指的是Linux的桌面发行版，并且默认你已经配置好了SSH连接。<br />首先在服务器上将<code>/etc/ssh/ssh_config</code>中的以下参数设为下列值。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">X11Forwarding</span> <span class="hljs-literal">yes</span><br>X11DisplayOffset <span class="hljs-number">10</span><br>X11UseLocalhost <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><p>这样SSH就可以转发X11信号了。<br />注意在连接SSH的时候一定要指定<code>-X</code>参数，确认使用X11，即<br /><code>ssh -p 22 -X username@ipaddress</code></p><h3 id="客户端配置"><a class="markdownIt-Anchor" href="#客户端配置"></a> 客户端配置</h3><p>客户端是Windows（Mac OS和其他Linux应该也可以）。<br />首先下载一个<a href="http://www.straightrunning.com/XmingNote">Xming</a>，安装时把Xlaunch也装上，配置就next一把梭。此处略过。<br />唯一要注意的是要记得显示器编号 (默认是0)，后面会用到。</p><p>先启动Xlaunch一把梭后，系统栏里会有个小小的X图标，即代表Xming启动了。<br />我们只要使用<br /><code>DISPLAY=localhost:0 ssh -p 22 -X username@ipaddress</code><br />来远程登录，登录后就可以直接输入GUI命令，比如：GVim，FireFox等。<br />不过远程嘛，你懂的。。延迟一般都比较高，体验被命令行完爆。</p><p>但是比较一个比较有用的做法是直接在Win上使用WSL的GUI:<br /><code>DISPLAY=0:0 gvim</code><br />DISPLAY的前一个参数应该是local port， 后一个参数是显示器编号。<br />通用的命令如下：<br /><code>DISPLAY=[local port]: [monitor num] appname</code><br />这种方法我认为比虚拟机上的体验还要好，因为不用同时跑两个系统。本质上来讲，WSL是套了Linux壳的Win，然后X11是用Linux的绘图标准来绘图，也就是说，相当于只跑了一个系统但是能够同时享受到两个系统的优势！</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.rehtt.com/index.php/archives/145/">【Linux】WSL+Xming实现gui显示</a></li><li><a href="https://www.ithome.com/html/win10/353700.htm">Win10 Linux 子系统安装图形化界面的两种方法及其对比</a></li><li><a href="https://blog.csdn.net/akuoma/article/details/82182913">Xming +Xshell 6 实现远程打开Linux界面</a></li><li><a href="https://zhuanlan.zhihu.com/p/81622442">新手Linux子系统方案：WSL+Xming+cmder+zsh与高能物理Cern Root的安装</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>远程</tag>
      
      <tag>GUI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>琐碎记事</title>
    <link href="/2020/12/06/%E7%90%90%E7%A2%8E%E8%AE%B0%E4%BA%8B/"/>
    <url>/2020/12/06/%E7%90%90%E7%A2%8E%E8%AE%B0%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="琐碎记事"><a class="markdownIt-Anchor" href="#琐碎记事"></a> 琐碎记事</h1><blockquote><p>最近天气转凉，人变忙，deadline让我很彷徨，也没啥心思去整理博客和修bug了。。<br />在此先稍作记录，等有空了再去一一解决。</p></blockquote><h2 id="踩坑腾讯云上的ubuntu-server-frp配置"><a class="markdownIt-Anchor" href="#踩坑腾讯云上的ubuntu-server-frp配置"></a> 踩坑：腾讯云上的Ubuntu server frp配置</h2><p>我的需求是在阿里云上架设frps，给校园网的一台Ubuntu，一台Win10做内网穿透。<br />Ubuntu上的很轻松就弄好了（因为比较熟悉），但Win10上的frpc死活没弄好。症状是frpc.exe启动后显示success，但是流量未被转发。<br />一开始以为是Win10的防火墙问题，全部关闭后也未解决。<br />又疑是Win10上的Open SSH和Linux上的不一样，查了半天资料发现好像没有什么不同。</p><p>最后发现是因为腾讯云上的Ubuntu有两重防火墙–Ubuntu防火墙UFW和云防火墙。<br />对于两个防火墙，都要开放<code>remote port = 6001</code><br />我只顾开放了腾讯云上防火墙的6001，而没有开放frpc的6001。导致内网流量无法被接收，转发失败。<br />在这时间稀缺的时间点白白浪费n个小时😥</p><p>在此做个记录，望以后的孩纸们引以为戒。</p><h2 id="issue1-博客的latex显示貌似有问题"><a class="markdownIt-Anchor" href="#issue1-博客的latex显示貌似有问题"></a> Issue1: 博客的LaTeX显示貌似有问题</h2><p>VsCode上的Markdown插件可以完美显示，发布到hexo后就无法很好地显示了。<br />可能是之前换了LaTeX渲染器的锅，也有可能是自己的语法写的不规范。。</p><h2 id="issue2-发布博文的方式需改进"><a class="markdownIt-Anchor" href="#issue2-发布博文的方式需改进"></a> Issue2: 发布博文的方式需改进</h2><p>现在因为图方便，是直接用VsCode remote到服务器上写博文，pm2挂一个<code>hexo deploy -g</code>当Web Server。<br />这样一是不太优雅，二是没有归档。<br />以后有时间了在本地和Github上建个中转来解决下。</p><p>P.S.<br />VsCode中文输入重影的问题找到了，原来是输入法和Vim插件不兼容，到时候再找下解决的办法吧。</p><h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2><p>少年不知愁滋味，欲赋新词强说愁。<br />如今略识愁滋味，却道天凉好个秋。</p>]]></content>
    
    
    
    <tags>
      
      <tag>内网穿透</tag>
      
      <tag>frp</tag>
      
      <tag>日常</tag>
      
      <tag>VsCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows Terminal折腾记</title>
    <link href="/2020/12/01/Windows-Terminal%E4%B8%8B%E7%9A%84WSL%E9%85%8D%E7%BD%AEVim%E5%85%89%E6%A0%87/"/>
    <url>/2020/12/01/Windows-Terminal%E4%B8%8B%E7%9A%84WSL%E9%85%8D%E7%BD%AEVim%E5%85%89%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><p>我的主力是Windows GUI + Ubuntu 命令行，这两天终于受够了Windows PowerShell的苦（虽然对一部分的Linux命令做了兼容，但是体验还是一言难尽）。<br />于是下定决心正式折腾了下Windows下的Linux子系统 (WSL)。</p><h2 id="windows-terminal的配置"><a class="markdownIt-Anchor" href="#windows-terminal的配置"></a> Windows Terminal的配置</h2><p>我采用的是：Windows Terminal + WSL(Ubuntu 20.04)<br />以上两个都可以直接从微软的应用商店一键安装。<br />主题方面用的是：Windows Terminal <a href="https://github.com/mbadolato/iTerm2-Color-Schemes/blob/master/windowsterminal/Dracula.json">dracula</a>主题 + oh-my-zsh <strong>ys</strong>主题。<br />主题以及zsh的配置可以参考<a href="https://segmentfault.com/a/1190000016677670">WSL 配置指北：打造 Windows 最强命令行</a>以及<a href="https://www.piddnad.cn/2019/05/04/ohmyzsh/">吊打一切 Shell 的 oh-my-zsh 简单配置指北</a>。</p><p>最终的效果如下：<br /><img src="WT-WSL.jpg" alt="WT dracula主题 + oh-my-zsh ys主题" /></p><h2 id="遇到的坑"><a class="markdownIt-Anchor" href="#遇到的坑"></a> 遇到的坑</h2><h3 id="wsl无法自动挂载插入的sd卡"><a class="markdownIt-Anchor" href="#wsl无法自动挂载插入的sd卡"></a> WSL无法自动挂载插入的SD卡</h3><ul><li><p>问题<br />因口袋光光，故购入Surface Pro7 8+128G版做远程和学习使用。<br />可以自行插入TF进行扩容，我插入了一张三星的256G TF卡。<br />在Win上使用没问题，但是WSL不能自动识别它，导致每次都要</p><p><code>sudo mount -t drvfs D: /mnt/d</code></p><p>那如果我使用1000次，就要输入1000次上面的命令，是对生命的严重浪费！（其实就是强迫症= =</p></li><li><p>解决方法<br />解决方法说起来也简单，就是在<code>~/.bashrc</code> or <code>~/.zshrc</code>中添加上这一行：<br /><code>sudo mount -t drvfs D: /mnt/d</code><br />但是问题来了，如果我要mount到/mnt的话必须要有sudo权限，那么等于我还是要在新建一个terminal的时候输入一次密码（因为会自动执行mount命令）<br />结果就是则并不真正解决问题…<br />最后的解决办法是将 $USER 下的 mount指令加入<code>/etc/sudoers</code>，这样每次自动mount而不用输入密码了！<br />加入方法见<a href="https://www.cyberciti.biz/faq/linux-unix-running-sudo-command-without-a-password/">这里</a></p></li></ul><h3 id="vim光标无法正常变为方块"><a class="markdownIt-Anchor" href="#vim光标无法正常变为方块"></a> Vim光标无法正常变为方块</h3><p>这个好像是Windows Terminal自己的bug, 解决方法就是在<code>~/.vimrc</code>中加入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; 进入插入模式下的光标形状</span><br><span class="hljs-string">let &amp;t_SI.=&quot;</span>\e[5 q<span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot; &quot;</span> 进入替换模式下的光标形状<br><span class="hljs-built_in">let</span> &amp;t_SR.=<span class="hljs-string">&quot;\e[3 q&quot;</span><br><span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span> <span class="hljs-string">&quot; 从插入模式或替换模式下退出，进入普通模式后的光标形状</span><br><span class="hljs-string">let &amp;t_EI.=&quot;</span>\e[1 q<span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot; &quot;</span> 进入vim时，设置普通模式下的光标形状<br>autocmd VimEnter * silent !<span class="hljs-built_in">echo</span> -ne <span class="hljs-string">&quot;\e[1 q&quot;</span><br><span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span> <span class="hljs-string">&quot; 离开vim后，恢复shell模式下的光标形状</span><br><span class="hljs-string">autocmd VimLeave * silent !echo -ne &quot;</span>\e[5 q<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>over, enjoy it.</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Windows Terminal</tag>
      
      <tag>Vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关系抽取公开数据集整理</title>
    <link href="/2020/11/18/%E5%85%B3%E7%B3%BB%E6%8A%BD%E5%8F%96%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B4%E7%90%86/"/>
    <url>/2020/11/18/%E5%85%B3%E7%B3%BB%E6%8A%BD%E5%8F%96%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="datasets"><a class="markdownIt-Anchor" href="#datasets"></a> Datasets</h2><!-- ✅❌ --><blockquote><p>说是数据集，可能叫做语料库(corpus)更加准确点？</p></blockquote><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Is Open?</th><th style="text-align:center">Cost</th><th style="text-align:center">From or Subject</th><th style="text-align:center">Entity / Relation / Sentence Num</th><th style="text-align:center">Link</th></tr></thead><tbody><tr><td style="text-align:center">TACRED</td><td style="text-align:center">✅</td><td style="text-align:center">$25</td><td style="text-align:center">newswire and web</td><td style="text-align:center">106,264 / 41 / 53,791</td><td style="text-align:center"><a href="https://nlp.stanford.edu/projects/tacred/">download</a> <a href="http://aclweb.org/anthology/D17-1004">paper</a></td></tr><tr><td style="text-align:center">DocRED</td><td style="text-align:center">✅</td><td style="text-align:center">Free</td><td style="text-align:center">Wikipedia Document</td><td style="text-align:center">132,375 / 96 / 40,276</td><td style="text-align:center"><a href="https://github.com/thunlp/DocRED">download</a> <a href="http://arxiv.org/abs/1906.06127">paper</a></td></tr><tr><td style="text-align:center">SciERC</td><td style="text-align:center">✅</td><td style="text-align:center">Free</td><td style="text-align:center">AI Conference</td><td style="text-align:center">8,089 / 4,716 / 500 docs</td><td style="text-align:center"><a href="http://nlp.cs.washington.edu/sciIE/">download</a> <a href="http://arxiv.org/abs/1808.09602">paper</a></td></tr><tr><td style="text-align:center">NYT</td><td style="text-align:center">✅</td><td style="text-align:center">$300</td><td style="text-align:center">New York Times article</td><td style="text-align:center">208,678 / 24 / 66,195 (Part)</td><td style="text-align:center"><a href="https://drive.google.com/open?id=10f24s9gM7NdyO3z5OqQxJgYud4NnCJg3">download</a> <a href="http://aclweb.org/anthology/P18-1047">paper</a></td></tr><tr><td style="text-align:center">WebNLG</td><td style="text-align:center">✅</td><td style="text-align:center">Free</td><td style="text-align:center">DBpedia</td><td style="text-align:center">25,298 / 246 / 9,674</td><td style="text-align:center"><a href="https://webnlg-challenge.loria.fr/download/">download</a> <a href="http://aclweb.org/anthology/P18-1047">paper</a></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>关系抽取</tag>
      
      <tag>公开数据集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NLP相关顶会总结</title>
    <link href="/2020/11/16/NLP%E7%9B%B8%E5%85%B3%E9%A1%B6%E4%BC%9A%E6%80%BB%E7%BB%93/"/>
    <url>/2020/11/16/NLP%E7%9B%B8%E5%85%B3%E9%A1%B6%E4%BC%9A%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="top-conferences"><a class="markdownIt-Anchor" href="#top-conferences"></a> Top Conferences</h2><table><thead><tr><th style="text-align:left">Conference Name</th><th style="text-align:center">Deadline</th><th style="text-align:center">CCF Rank</th><th style="text-align:center">Keywords</th><th style="text-align:center">Acce Rate(%)</th><th style="text-align:center">Web Site</th></tr></thead><tbody><tr><td style="text-align:left"><strong>ACL</strong> (Meeting of the Association for Computational Linguistics)</td><td style="text-align:center">2021.02.01</td><td style="text-align:center">A</td><td style="text-align:center">linguistics</td><td style="text-align:center">17.6</td><td style="text-align:center"><a href="https://www.aclweb.org/portal">link</a></td></tr><tr><td style="text-align:left"><strong>EMNLP</strong> (Conference on Empirical Methods in Natural Language Processing)</td><td style="text-align:center">2020.06.01</td><td style="text-align:center">B</td><td style="text-align:center">method &amp; empirical results</td><td style="text-align:center">20.5</td><td style="text-align:center"><a href="https://2020.emnlp.org/">link</a></td></tr><tr><td style="text-align:left"><strong>NAACL</strong> (The North American Chapter of the Association for Computational Linguistics)</td><td style="text-align:center">2020.11.23</td><td style="text-align:center">C</td><td style="text-align:center">open-minded</td><td style="text-align:center">21.3</td><td style="text-align:center"><a href="http://naacl.org/">link</a></td></tr><tr><td style="text-align:left"><strong>CoNLL</strong> (Conference on Computational Natural Language Learning)</td><td style="text-align:center">2020.07.11</td><td style="text-align:center">C</td><td style="text-align:center"></td><td style="text-align:center"><em>23.3</em></td><td style="text-align:center"><a href="https://www.conll.org/2020">link</a></td></tr><tr><td style="text-align:left"><strong>COLING</strong> (International Conference on Computational Linguistics)</td><td style="text-align:center">2020.07.01</td><td style="text-align:center">B</td><td style="text-align:center">every 2 years</td><td style="text-align:center">33.4</td><td style="text-align:center"><a href="http://coling2020.org/">link</a></td></tr><tr><td style="text-align:left"><strong>ICLR</strong> (International Conference on Learning Representations)</td><td style="text-align:center">2020.09.28</td><td style="text-align:center">None</td><td style="text-align:center">deep learning</td><td style="text-align:center">26.5</td><td style="text-align:center"><a href="https://iclr.net/">link</a></td></tr><tr><td style="text-align:left"><strong>AAAI</strong> (Association for the Advancement of Artificial Intelligence)</td><td style="text-align:center">2020.09.01</td><td style="text-align:center">A</td><td style="text-align:center"></td><td style="text-align:center">20.6</td><td style="text-align:center"><a href="https://www.aaai.org/">link</a></td></tr><tr><td style="text-align:left"><strong>NLPCC</strong> (The CFF International conference on Natural Language Processing and Chinese Computing)</td><td style="text-align:center">2020.06.07</td><td style="text-align:center">C</td><td style="text-align:center">Chinese</td><td style="text-align:center"><em>21.0</em></td><td style="text-align:center"><a href="http://tcci.ccf.org.cn/conference/2020/">link</a></td></tr></tbody></table><blockquote><p>Until 2020.11.10<br />Acceptance rate mainly comes from <a href="https://github.com/lixin4ever/Conference-Acceptance-Rate">https://github.com/lixin4ever/Conference-Acceptance-Rate</a><br />Italic data comes from web.</p></blockquote><ul><li>Google Scholar Top Conference</li></ul><!-- ![Google Scholar H5 Data](Google_Scholar_Top_Confer.jpg) --><img src="/2020/11/16/NLP%E7%9B%B8%E5%85%B3%E9%A1%B6%E4%BC%9A%E6%80%BB%E7%BB%93/Google_Scholar_Top_Confer.jpg" class="" title="Google_Scholar_Data"><p><a href="https://scholar.google.com/citations?view_op=top_venues&amp;hl=en&amp;vq=eng_computationallinguistics">https://scholar.google.com/citations?view_op=top_venues&amp;hl=en&amp;vq=eng_computationallinguistics</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Natural Language Processing</tag>
      
      <tag>Top Conference</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初探Attention Mechanism</title>
    <link href="/2020/11/13/%E5%88%9D%E6%8E%A2Attention-Mechanism/"/>
    <url>/2020/11/13/%E5%88%9D%E6%8E%A2Attention-Mechanism/</url>
    
    <content type="html"><![CDATA[<h2 id="what-is-attention-mechainism"><a class="markdownIt-Anchor" href="#what-is-attention-mechainism"></a> What is attention mechainism?</h2><blockquote><p>Attention is a just <strong>vector</strong>, often the ouputs of dense layer using softmax function.</p></blockquote><h3 id="memory-of-human"><a class="markdownIt-Anchor" href="#memory-of-human"></a> Memory of human</h3><ul><li>Sensory Memory</li><li>Working Memory<br />Attention<blockquote><p>It can be a long time memory and input / output with different sequences.<br />E.g. machine translation</p></blockquote></li><li>Long-term Memory</li></ul><p>It is a mechanism to improve performance of encoder + decoder model based on RNN (LSTM or GRU). It can also describe what mechan has learnt and open the black box of deep learning.</p><h2 id="why-attention"><a class="markdownIt-Anchor" href="#why-attention"></a> Why attention?</h2><p>Traditional seq-to-seq model encodes all input information as a fixed-length vector, which makes it difficult to copy with long sentence. The performance deteriorates rapidly as the length of input sentence increases.</p><p>So it does not attempt to encode input sentence into a single fixed-length vector. Instead, it encodes the input sentence into a sequence of vectors and <em>chooses a subset of these vectors</em> while decoding.</p><h2 id="how-does-it-work"><a class="markdownIt-Anchor" href="#how-does-it-work"></a> How does it work?</h2><ul><li><p>Generate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Y</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">Y_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> in timestep t</p><ol><li>Encode input sentence <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1..X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and get hidden states of encoder RNN: $ h_{1}, h_{2}, …,  h_{n} $</li><li>Get decoder’s previous internal state and set as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></li><li>Scores: do <strong>match</strong> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">h_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> … <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">h_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>, then calculate the similarity <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>a</mi><mn>0</mn><mi>t</mi></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>a</mi><mi>i</mi><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">a^{t}_{0} .. a^{t}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05222em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> of them</li><li>Attention weight: do softmax with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>a</mi><mn>0</mn><mi>t</mi></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>a</mi><mi>n</mi><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">a^{t}_{0} .. a^{t}_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mover accent="true"><mi>a</mi><mo>^</mo></mover><mn>0</mn><mi>t</mi></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>n</mi><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{a}^{t}_{0} .. \hat{a}^{t}_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br />apply weights to hidden states as context vector: $$c_{i} = \sum_{i=1}^{n} {\hat{a}^{t}<em>{i} h</em>{i} }$$</li><li>Decoder hidden states <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_{t} = s_{t-1} + c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Generate output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>: decode <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">S_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to generate output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Y</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">Y_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ol><blockquote><p>What is <em>match</em>?<br /><em>match</em> is a align method to descripe how much input words <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> influence on output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Y</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">Y_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />we can define it as:</p></blockquote><ul><li>cos similarity of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span></li><li>small NN whose input is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>, output is a scalar</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><msup><mi>h</mi><mi>T</mi></msup><mi>W</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">a = h^TWz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></li></ul></li></ul><p><img src="https://pic4.zhimg.com/80/v2-163c0c3dda50d1fe7a4f7a64ba728d27_1440w.jpg" alt="Attention_Mechanism" /></p><h2 id="how-many-attention-method-there-are"><a class="markdownIt-Anchor" href="#how-many-attention-method-there-are"></a> How many attention method there are?</h2><ul><li>soft attention &amp; hard attention</li><li>global attention &amp; local attention</li><li>self attention</li><li>hierarchical attention<br />For document classfication</li><li>attention over attention</li></ul><h2 id="essence-of-attention"><a class="markdownIt-Anchor" href="#essence-of-attention"></a> Essence of attention</h2><p><img src="https://zrspic.oss-cn-beijing.aliyuncs.com/20190804141140.png" alt="Essence" /></p><p>The essence of attention is to weighted sum value of source, and weight is calculated by the relationship of key and value.</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>y</mi><mo separator="true">,</mo><mi>S</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>L</mi><mi>x</mi></msub></munderover><mi>S</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo stretchy="false">(</mo><mi>Q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>y</mi><mo separator="true">,</mo><mi>K</mi><mi>e</mi><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Attention(Query, Source) = \sum_{i=1}^{L_x}Similarity(Query, Key_i) * Value_i </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1171050000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><hr /><p>Another way:<br />Attention is like the computer’s memory addressing.</p><h2 id="application"><a class="markdownIt-Anchor" href="#application"></a> Application</h2><ul><li>Mechan translation</li><li>Image caption extraction</li><li>Document classification</li><li>Speech recognition</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Attention Mechanism</tag>
      
      <tag>Machine Learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
